[tool.poetry]
name = "30-solar-circle-backend"
version = "0.1.0"
description = ""
authors = ["egor <sharapov.egor00@gmail.com>"]
readme = "README.md"

# версия
[tool.poetry.dependencies]
python = "3.11.5"
django = "^5.1"
djangorestframework = "^3.15.2"
python-dotenv = "^1.0.1"
psycopg2-binary = "^2.9.9"
drf-spectacular = "^0.27.2"
django-phonenumber-field = {extras = ["phonenumberslite"], version = "^8.0.0"}
pillow = "^10.4.0"
ipython = "^8.24.0"
coverage = "^7.6.1"
rest-framework-simplejwt = "^0.0.2"
djangorestframework-simplejwt = "^5.3.1"
django-cors-headers = "^4.4.0"
djoser = "^2.2.3"
faker = "^29.0.0"
mimesis = "^18.0.0"


[tool.poetry.group.lint.dependencies]
black = "^23.10.1"
isort = "^5.12.0"
mypy = "^1.6.1"
flake8 = "^6.1.0"

[tool.black]
# максимальная длина строки
line-length = 119
# файлы, которые не нужно форматировать
exclude = '''
(
  /(
      \.eggs         # исключить несколько общих каталогов в
    | \.git          # корне проекта
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | dist
  )/
  | foo.py           # также отдельно исключить файл с именем foo.py в
                     # корне проекта
)
'''

[tool.isort]
# максимальная длина строки
line_length = 119

[tool.mypy]
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
exclude = 'venv'


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
coverage = "^7.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
